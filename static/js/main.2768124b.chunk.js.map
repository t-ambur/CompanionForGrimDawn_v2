{"version":3,"sources":["Utils.js","constants.js","companionV1.js","ui.js","changes.js","links.js","nav.js","App.js","serviceWorker.js","index.js"],"names":["getColor","constellation","resources","isSelected","isAvailable","requirements","ascendant","chaos","eldritch","order","primordial","sort","constellations","a","b","name","getPointsUsed","data","filter","reduce","current","points","imgBg","ascendantImg","chaosImg","eldritchImg","orderImg","primordialImg","CompanionV1","props","ConstellationGrid","state","selected","searchText","toLowerCase","includes","description","pathHistory","pathSize","onAddItemClicked","addRes","setState","save","localStorage","removeItem","console","log","alert","rewards","onRemoveItemClicked","dependant","tempResources","forEach","item","getDependant","listener","reset","showSummary","onSearch","setItem","JSON","stringify","Stack","h","bg","pointsUsed","background","shadow","align","style","position","top","isInline","w","Text","fontSize","px","my","Image","py","pl","src","ml","Flex","justifyContent","Menu","as","Button","rightIcon","p","onClick","getHeader","SimpleGrid","minChildWidth","spacing","map","PseudoBox","maxW","borderWidth","rounded","overflow","_hover","_active","textAlign","Tabs","isFitted","variant","_selected","color","size","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","imageSrc","split","el","line","justify","ButtonGroup","cardLayout","Modal","isOpen","onClose","summary","getSummary","variantColor","mr","parse","getItem","obj","React","Component","Changes","Links","href","Nav","className","to","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2768124b.chunk.js","sourcesContent":["export function getColor(constellation, resources) {\r\n    const selectedGreen = \"#49ff42\";\r\n    const availableYellow = \"#fff98a\";\r\n    const unavailableRed = \"#f01818\";\r\n\r\n    if (constellation.isSelected) {\r\n        return selectedGreen\r\n    } else {\r\n        if (isAvailable(constellation.requirements, resources)) {\r\n            return availableYellow\r\n        } else {\r\n            return unavailableRed\r\n        }\r\n    }\r\n}\r\n\r\nexport function isAvailable(requirements, resources) {\r\n    return (requirements.ascendant ? resources.ascendant >= requirements.ascendant : true)\r\n        && (requirements.chaos ? resources.chaos >= requirements.chaos : true)\r\n        && (requirements.eldritch ? resources.eldritch >= requirements.eldritch : true)\r\n        && (requirements.order ? resources.order >= requirements.order : true)\r\n        && (requirements.primordial ? resources.primordial >= requirements.primordial : true)\r\n}\r\n\r\nexport function sort(constellations, resources) {\r\n    return constellations.sort((a, b) => (a.name > b.name) ? 1 : -1)\r\n        .sort((a, b) => (!a.isSelected > b.isSelected) ? 1 : -1)\r\n        .sort((a, b) => {\r\n            if (!a.requirements) {\r\n                return -1\r\n            } else if (!b.requirements) {\r\n                return 0\r\n            } else {\r\n                return (isAvailable(a.requirements, resources) && !isAvailable(b.requirements, resources) ? -1 : 1)\r\n            }\r\n        })\r\n}\r\n\r\nexport function getPointsUsed(data) {\r\n    return data.filter(constellation => constellation.isSelected).reduce((current, constellation) => current + constellation.points, 0)\r\n}\r\n\r\nexport function getDependant(resources, data, constellation) {\r\n    let dependant = \"\";\r\n    let tempResources = {\r\n        ascendant: resources.ascendant - (constellation.rewards.ascendant ? constellation.rewards.ascendant : 0),\r\n        chaos: resources.chaos - (constellation.rewards.chaos ? constellation.rewards.chaos : 0),\r\n        eldritch: resources.eldritch - (constellation.rewards.eldritch ? constellation.rewards.eldritch : 0),\r\n        order: resources.order - (constellation.rewards.order ? constellation.rewards.order : 0),\r\n        primordial: resources.primordial - (constellation.rewards.primordial ? constellation.rewards.primordial : 0)\r\n    };\r\n    data.filter(constellation => constellation.isSelected).forEach(item => {\r\n        if (!isAvailable(item.requirements, tempResources)) {\r\n            dependant = dependant + item.name + \"\\n\"\r\n        }\r\n    });\r\n    return dependant\r\n}\r\n\r\nexport function getSummary(data, resources, pathHistory) {\r\n    let summary = \"\";\r\n    summary += \"Ascendant: \" + resources.ascendant + \"\\n\";\r\n    summary += \"Chaos: \" + resources.chaos + \"\\n\";\r\n    summary += \"Eldritch: \" + resources.eldritch + \"\\n\";\r\n    summary += \"Order: \" + resources.order + \"\\n\";\r\n    summary += \"Primordial: \" + resources.primordial + \"\\n\";\r\n    summary += \"\\nActive: \\n\";\r\n    data.filter(item => {\r\n        return item.isSelected\r\n    }).forEach((item) => {\r\n        summary += \"  >\" + item.name + \"\\n\"\r\n    });\r\n    summary += \"\\nPoints Used: \" + getPointsUsed(data) + \"\\n\";\r\n    summary += \"\\nSteps: \\n\";\r\n    summary += pathHistory;\r\n    return summary\r\n}","export const imgBg = `url(https://paint-magic.co.uk/wp-content/uploads/STARRY-NIGHT-bartek-garbowicz-521359-unsplash.jpg)`;\r\nexport const ascendantImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/0/0b/Ascendant_Icon.png?version=657ce21b35d259897b9aee43b98ff757\";\r\nexport const chaosImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/7/79/Chaos_Icon.png?version=de7171257873a00cb01317dc054b0380\";\r\nexport const eldritchImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/5/54/Eldritch_Icon.png?version=1168139a9b53a370aa291734a30b2ca9\";\r\nexport const orderImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/8/84/Order_Icon.png?version=1b5063cb47ed4b8c4cfc9f962fbdf2bc\";\r\nexport const primordialImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/b/b4/Primordial_Icon.png?version=f8082d7c09ae3a3733a28702c388d243\";","import React from 'react';\r\nimport './companion.css';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay,\r\n    PseudoBox,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text,\r\n    useDisclosure\r\n} from \"@chakra-ui/core\";\r\nimport {getColor, getDependant, getPointsUsed, getSummary, sort} from './Utils'\r\nimport constellations from './constellations'\r\nimport {cardDetail, cardLayout, getHeader} from \"./ui\";\r\n\r\nexport default class CompanionV1 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const save = JSON.parse(localStorage.getItem(\"save\"));\r\n        if (save) {\r\n            this.state = {\r\n                constellations: save.data,\r\n                resources: save.resources,\r\n                pathHistory: save.pathHistory,\r\n                pathSize: save.pathSize,\r\n            }\r\n        } else {\r\n            this.state = {\r\n                constellations: constellations.map(obj => ({\r\n                    name: obj.name,\r\n                    points: obj.points,\r\n                    requirements: obj.requirements,\r\n                    rewards: obj.rewards,\r\n                    imageSrc: obj.imageSrc,\r\n                    description: obj.description,\r\n                    isSelected: false\r\n                })),\r\n                resources: {\r\n                    ascendant: 0,\r\n                    chaos: 0,\r\n                    eldritch: 0,\r\n                    order: 0,\r\n                    primordial: 0\r\n                },\r\n                pathHistory: \"\",\r\n                pathSize: 0,\r\n                searchText: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <this.ConstellationGrid/>\r\n        );\r\n    }\r\n\r\n    ConstellationGrid = () => {\r\n        const resources = this.state.resources;\r\n        const selected = this.state.selected;\r\n        let data = sort(this.state.constellations, resources)\r\n            .filter(constellation => this.state.searchText ? constellation.name.toLowerCase().includes(this.state.searchText) || constellation.description.toLowerCase().includes(this.state.searchText) : true);\r\n        let pathHistory = this.state.pathHistory;\r\n        let pathSize = this.state.pathSize;\r\n\r\n        const onAddItemClicked = (constellation) => {\r\n            if (getPointsUsed(data) + constellation.points <= 55) {\r\n                addRes(constellation);\r\n                constellation.isSelected = true;\r\n                pathHistory += (this.state.pathSize + 1) + \": Add \" + constellation.name + \"\\n\";\r\n                pathSize += 1;\r\n                this.setState({\r\n                    constellations: data,\r\n                    resources: resources,\r\n                    pathHistory: pathHistory,\r\n                    pathSize: pathSize,\r\n                    searchText: \"\"\r\n                });\r\n                save();\r\n                localStorage.removeItem(\"search\");\r\n                console.log(this.state.searchText);\r\n                data = sort(this.state.constellations, resources)\r\n                .filter(constellation => this.state.searchText ? constellation.name.toLowerCase().includes(this.state.searchText) || constellation.description.toLowerCase().includes(this.state.searchText) : true);    \r\n            } else {\r\n                alert(\"You don't have enough points to add this devotion. Remove another one first.\");\r\n            }\r\n        };\r\n\r\n        const addRes = (constellation) => {\r\n            resources.ascendant += constellation.rewards.ascendant ? constellation.rewards.ascendant : 0;\r\n            resources.chaos += constellation.rewards.chaos ? constellation.rewards.chaos : 0;\r\n            resources.eldritch += constellation.rewards.eldritch ? constellation.rewards.eldritch : 0;\r\n            resources.order += constellation.rewards.order ? constellation.rewards.order : 0;\r\n            resources.primordial += constellation.rewards.primordial ? constellation.rewards.primordial : 0;\r\n        };\r\n\r\n        const onRemoveItemClicked = (constellation) => {\r\n            const dependant = getDependant(resources, data, constellation);\r\n            if (dependant === \"\") {\r\n                resources.ascendant -= constellation.rewards.ascendant ? constellation.rewards.ascendant : 0;\r\n                resources.chaos -= constellation.rewards.chaos ? constellation.rewards.chaos : 0;\r\n                resources.eldritch -= constellation.rewards.eldritch ? constellation.rewards.eldritch : 0;\r\n                resources.order -= constellation.rewards.order ? constellation.rewards.order : 0;\r\n                resources.primordial -= constellation.rewards.primordial ? constellation.rewards.primordial : 0;\r\n\r\n                constellation.isSelected = false;\r\n\r\n                pathHistory += (this.state.pathSize + 1) + \": Remove \" + constellation.name + \"\\n\";\r\n                pathSize += 1;\r\n                this.setState({\r\n                    constellations: data,\r\n                    resources: resources,\r\n                    pathHistory: pathHistory,\r\n                    pathSize: pathSize\r\n                });\r\n                save();\r\n            } else {\r\n                alert(\"Cannot remove. The following devotions depend on this: \\n\" + dependant);\r\n            }\r\n        };\r\n\r\n        const onReset = () => {\r\n            data.forEach((item) => {\r\n                item.isSelected = false\r\n            });\r\n            resources.ascendant = 0;\r\n            resources.chaos = 0;\r\n            resources.eldritch = 0;\r\n            resources.order = 0;\r\n            resources.primordial = 0;\r\n            pathHistory = \"\";\r\n            pathSize = 0;\r\n            this.setState({\r\n                constellations: data,\r\n                resources: resources,\r\n                pathHistory: pathHistory,\r\n                pathSize: pathSize\r\n            });\r\n            save()\r\n        };\r\n\r\n        const showSummary = () => {\r\n            this.setState({\r\n                showSummary: true\r\n            });\r\n        };\r\n\r\n        const onSearch = (searchText) => {\r\n            this.setState({\r\n                searchText: searchText\r\n            });\r\n        };\r\n\r\n        const listener = {\r\n            reset: onReset,\r\n            showSummary: showSummary,\r\n            onSearch: onSearch\r\n        };\r\n\r\n        const save = () => {\r\n            localStorage.setItem(\"save\",\r\n                JSON.stringify({\r\n                    data: data,\r\n                    resources: resources,\r\n                    pathHistory: pathHistory,\r\n                    pathSize: pathSize\r\n                }));\r\n        };\r\n\r\n        return (\r\n            <Stack\r\n                h=\"100%\"\r\n                bg=\"#a8bdb9\">\r\n                {\r\n                    getHeader(this.state.resources, getPointsUsed(data), listener, this.state.searchText)\r\n                }\r\n                <SimpleGrid\r\n                    p={16}\r\n                    minChildWidth=\"300px\"\r\n                    spacing=\"20px\">\r\n                    {\r\n                        data.map(constellation => {\r\n                            return (\r\n                                <PseudoBox\r\n                                    bg={\r\n                                        getColor(constellation, this.state.resources)\r\n                                    }\r\n                                    maxW=\"sm\"\r\n                                    w=\"350px\"\r\n                                    borderWidth=\"1px\"\r\n                                    rounded=\"md\"\r\n                                    overflow=\"hidden\"\r\n                                    _hover={{\r\n                                        shadow: \"lg\",\r\n                                    }}\r\n                                    _active={{\r\n                                        shadow: \"none\",\r\n                                    }}>\r\n                                    {\r\n                                        cardLayout(constellation, resources, onAddItemClicked, onRemoveItemClicked, selected, data)\r\n                                    }\r\n                                </PseudoBox>\r\n                            )\r\n                        })\r\n                    }\r\n                </SimpleGrid>\r\n                <Modal isOpen={this.state.showSummary} onClose={\r\n                    () => {\r\n                        this.setState({\r\n                            showSummary: false\r\n                        })\r\n                    }\r\n                }>\r\n                    <ModalOverlay/>\r\n                    <ModalContent>\r\n                        <ModalHeader>Summary</ModalHeader>\r\n                        <ModalCloseButton/>\r\n                        <ModalBody>\r\n                            {\r\n                                getSummary(data, resources, this.state.pathHistory).split('\\n').map(line => {\r\n                                    return (\r\n                                        <Text px={4}>\r\n                                            {line}\r\n                                        </Text>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <Button variantColor=\"blue\" mr={3} onClick={\r\n                                () => {\r\n                                    this.setState({\r\n                                        showSummary: false\r\n                                    })\r\n                                }\r\n                            }>\r\n                                Close\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ModalContent>\r\n                </Modal>\r\n            </Stack>\r\n        );\r\n    }\r\n}","import {\r\n    Button,\r\n    ButtonGroup,\r\n    Flex,\r\n    Icon,\r\n    Image,\r\n    Input,\r\n    InputGroup,\r\n    InputLeftElement,\r\n    Menu,\r\n    MenuButton,\r\n    MenuItem,\r\n    MenuList,\r\n    Modal,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay,\r\n    Stack,\r\n    Tabs,\r\n    TabList,\r\n    TabPanels,\r\n    Tab,\r\n    TabPanel,\r\n    Text\r\n} from \"@chakra-ui/core\";\r\nimport React from \"react\";\r\nimport {ascendantImg, chaosImg, eldritchImg, imgBg, orderImg, primordialImg} from \"./constants\";\r\nimport {isAvailable, getSummary} from \"./Utils\";\r\n\r\nexport function cardLayout(constellation, resources, onAddItemClicked, onRemoveItemClicked, selected) {\r\n    return (\r\n        <Stack>\r\n            <Text textAlign={[ 'left', 'center' ]}>\r\n                {constellation.name} (Points: {constellation.points})\r\n            </Text>\r\n            <Tabs isFitted variant=\"enclosed\">\r\n                <TabList>\r\n                    <Tab  _selected={{ color: \"white\", bg: \"blue.500\"}}> Image </Tab>\r\n                    <Tab _selected={{ color: \"white\", bg: \"blue.500\"}}> Description </Tab>\r\n                </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <Image size=\"350px\" style={{\r\n                    backgroundImage: imgBg,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat'\r\n                }} src={constellation.imageSrc}/>\r\n                </TabPanel>\r\n                <TabPanel bg={\"gray.200\"}> {\r\n                                constellation.description.split('\\n').filter(function (el) {\r\n                                    return el !== \"\";\r\n                                }).map(line => {\r\n                                    return (\r\n                                        <Text px={4}>\r\n                                            {line}\r\n                                        </Text>\r\n                                    )\r\n                                })\r\n                            } \r\n                </TabPanel>\r\n            </TabPanels>\r\n            </Tabs>\r\n            {\r\n                <Stack isInline w=\"100%\" align={\"center\"}>\r\n                    <Text pl={4}>\r\n                        Required:\r\n                    </Text>\r\n                    {\r\n                        constellation.requirements.ascendant &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={ascendantImg}/>\r\n                    }\r\n                    {\r\n                        constellation.requirements.ascendant &&\r\n                        <Text>\r\n                            {constellation.requirements.ascendant}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.requirements.chaos &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={chaosImg}/>\r\n                    }\r\n                    {\r\n                        constellation.requirements.chaos &&\r\n                        <Text>\r\n                            {constellation.requirements.chaos}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.requirements.eldritch &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={eldritchImg}/>\r\n                    }\r\n                    {\r\n                        constellation.requirements.eldritch &&\r\n                        <Text>\r\n                            {constellation.requirements.eldritch}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.requirements.order &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={orderImg}/>\r\n                    }\r\n                    {\r\n                        constellation.requirements.order &&\r\n                        <Text>\r\n                            {constellation.requirements.order}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.requirements.primordial &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={primordialImg}/>\r\n                    }\r\n                    {\r\n                        constellation.requirements.primordial &&\r\n                        <Text>\r\n                            {constellation.requirements.primordial}\r\n                        </Text>\r\n                    }\r\n                </Stack>\r\n            }\r\n\r\n            {\r\n                <Stack isInline w=\"100%\" align={\"center\"}>\r\n                    <Text pl={4}>\r\n                        Rewards:\r\n                    </Text>\r\n                    {\r\n                        constellation.rewards.ascendant &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={ascendantImg}/>\r\n                    }\r\n                    {\r\n                        constellation.rewards.ascendant &&\r\n                        <Text>\r\n                            {constellation.rewards.ascendant}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.rewards.chaos &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={chaosImg}/>\r\n                    }\r\n                    {\r\n                        constellation.rewards.chaos &&\r\n                        <Text>\r\n                            {constellation.rewards.chaos}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.rewards.eldritch &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={eldritchImg}/>\r\n                    }\r\n                    {\r\n                        constellation.rewards.eldritch &&\r\n                        <Text>\r\n                            {constellation.rewards.eldritch}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.rewards.order &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={orderImg}/>\r\n                    }\r\n                    {\r\n                        constellation.rewards.order &&\r\n                        <Text>\r\n                            {constellation.rewards.order}\r\n                        </Text>\r\n                    }\r\n                    {\r\n                        constellation.rewards.primordial &&\r\n                        <Image w=\"24px\" py={2} pl={4} src={primordialImg}/>\r\n                    }\r\n                    {\r\n                        constellation.rewards.primordial &&\r\n                        <Text>\r\n                            {constellation.rewards.primordial}\r\n                        </Text>\r\n                    }\r\n                </Stack>\r\n            }\r\n            <Flex justify=\"center\" align=\"center\">\r\n                <ButtonGroup spacing={10}>\r\n                {isAvailable(constellation.requirements, resources) && !constellation.isSelected &&\r\n                    <Button onClick={() => onAddItemClicked(constellation)} size=\"lg\"> Select </Button> }\r\n                {constellation.isSelected &&\r\n                    <Button onClick={() => onRemoveItemClicked(constellation)} size=\"lg\"> Remove </Button> }\r\n                </ButtonGroup>\r\n            </Flex>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport function cardDetail(selected, isOpen, onClose, resources, onAddItemClicked, onRemoveItemClicked) {\r\n    return (\r\n        selected &&\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay/>\r\n            <ModalContent>\r\n                <ModalHeader> {selected.name} (Points: {selected.points})</ModalHeader>\r\n                <ModalCloseButton/>\r\n                <ModalBody>\r\n                    {\r\n                        <Stack>\r\n                            <Image h=\"250px\" style={{\r\n                                backgroundImage: imgBg,\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }} src={selected.imageSrc}/>\r\n                            {\r\n                                selected.description.split('\\n').filter(function (el) {\r\n                                    return el !== \"\";\r\n                                }).map(line => {\r\n                                    return (\r\n                                        <Text px={4}>\r\n                                            {line}\r\n                                        </Text>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Stack>\r\n                    }\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button variantColor=\"blue\" mr={3} onClick={onClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                    {selected.isSelected &&\r\n                    <Button variantColor=\"red\" variant=\"ghost\" onClick={() => {\r\n                        if (onRemoveItemClicked(selected)) {\r\n                            onClose()\r\n                        }\r\n                    }}>Remove</Button>}\r\n\r\n                    {isAvailable(selected.requirements, resources) && !selected.isSelected &&\r\n                    <Button variantColor=\"green\" variant=\"ghost\" onClick={() => {\r\n                        if (onAddItemClicked(selected)) {\r\n                            onClose()\r\n                        }\r\n                    }}>Add</Button>}\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport function getHeader(resources, pointsUsed, listener) {\r\n    return (\r\n        <Stack background={\"grey\"} shadow=\"md\" align={\"center\"} style={{\r\n            position: \"sticky\",\r\n            top: \"0\"\r\n        }}>\r\n            <Stack isInline w=\"100%\" align={\"center\"}>\r\n                <Text w=\"100%\" fontSize=\"4xl\" px={8} my={2}>\r\n                    Companion For Grim Dawn v2\r\n                </Text>\r\n                <Image py={2} pl={4} src={ascendantImg}/>\r\n                <Text>\r\n                    {resources.ascendant}\r\n                </Text>\r\n                <Image py={2} pl={4} src={chaosImg}/>\r\n                <Text>\r\n                    {resources.chaos}\r\n                </Text>\r\n                <Image py={2} pl={4} src={eldritchImg}/>\r\n                <Text>\r\n                    {resources.eldritch}\r\n                </Text>\r\n                <Image py={2} pl={4} src={orderImg}/>\r\n                <Text>\r\n                    {resources.order}\r\n                </Text>\r\n                <Image py={2} pl={4} src={primordialImg}/>\r\n                <Text>\r\n                    {resources.primordial}\r\n                </Text>\r\n                <Text w=\"100%\" fontSize=\"4xl\" ml={8} my={2}>\r\n                    Points Used: {pointsUsed} / 55\r\n                </Text>\r\n                <Flex w=\"100%\" px=\"64px\" justifyContent={\"flex-end\"}>\r\n                    <Menu>\r\n                        <MenuButton as={Button} rightIcon=\"chevron-down\">\r\n                            Actions\r\n                        </MenuButton>\r\n                        <MenuList>\r\n                            <MenuItem p={2} onClick={listener.showSummary}>Show Summary</MenuItem>\r\n                            <MenuItem p={2} onClick={listener.reset}>Reset</MenuItem>\r\n                        </MenuList>\r\n                    </Menu>\r\n                </Flex>\r\n\r\n            </Stack>\r\n            \r\n        </Stack>\r\n    )\r\n}\r\n\r\n/*\r\nthis goes inbetween stack above\r\n<InputGroup pb={4}>\r\n                <InputLeftElement\r\n                    height={16}\r\n                    px={4}\r\n                    children={\r\n                        <Icon\r\n                            height={6}\r\n                            width={6}\r\n                            name=\"search\"\r\n                            color=\"gray.300\"/>\r\n                    }\r\n                />\r\n\r\n                <Input\r\n                    variant=\"filled\"\r\n                    focusBorderColor=\"null\"\r\n                    style={{background: \"white\", transition: \".3s\"}}\r\n                    textAlign={['left', 'center']}\r\n                    type=\"text\"\r\n                    fontSize={32}\r\n                    placeholder=\"Search...\"\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            listener.onSearch(localStorage.getItem(\"search\"))\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        localStorage.setItem(\"search\", e.target.value.toLowerCase())\r\n                    }}\r\n                    _focus={{\r\n                        borderColor: \"white\",\r\n                        shadow: \"md\",\r\n                        position: \"relative\",\r\n                        top: \"-2px\",\r\n                        width: \"600px\"\r\n                    }}\r\n                    height={16}\r\n                    width={350}/>\r\n            </InputGroup>\r\n            */","import React from 'react';\r\nimport './companion.css';\r\n\r\n\r\n// class handles the login page, login reroutes to a confirmation page that displays good login or failed login\r\n// confirmation page will reroute to login to try again\r\n\r\nclass Changes extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { \r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>\r\n                    If you are having trouble seeing an update listed in this log: clear your cookies and cache for this webpage and refresh the page.\r\n                    <br/>\r\n                    You will always see the latest version if you set your browser to delete cookies for this webpage on browser close.\r\n                </p>\r\n                <h1> Change Log </h1>\r\n\r\n                <h3> 8/14/2020 - v0.2.2 </h3>\r\n                <ul>\r\n                    <li> Removed mastery option from nav bar (grim tools already does this) </li>\r\n                    <li> Updated UI </li>\r\n                    <li> Fixed primordials not showing requirements </li>\r\n                    <li> temporary removed search bar as it is beyond broken at this point</li>\r\n                </ul>\r\n\r\n                <h3> 08/11/2020 - v0.2.1 </h3>\r\n                <ul>\r\n                    <li> Correct Reward to Staff </li>\r\n                    <li> I am aware of the Search bug (refresh as a workaround) and some primordials not displaying required amount properly</li>\r\n                </ul>\r\n\r\n                <h3> 08/11/2020 - v0.2.0 </h3>\r\n                <ul>\r\n                    <li> All Devotion Descriptions up to date with Grim Dawn version v1.1.7.2</li>\r\n                    <li> All Devotion Descriptions now show the node sequence when adding points to them</li>\r\n                    <li> All Devotion Descriptions are reformatted </li>\r\n                    <li> Forked and rehosted from https://github.com/andrewsnyder328/CompanionForGrimDawn to https://github.com/t-ambur/CompanionForGrimDawn_v2 </li>\r\n                    <li> Added simple navigation bar/buttons at top of screen (Devotions, Masteries, Links, Change Log) </li>\r\n                    <li> Added some important links</li>\r\n                    <li> Added this change log</li>\r\n                    <li> Updated favicon and website title </li>\r\n                    <li> Structural changes/additions to code to faciliate faster development in the future</li> \r\n                    <li> CSS coloring changes (Darker)</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Changes;\r\n","import React from 'react';\r\nimport './companion.css';\r\n\r\n\r\n// class handles the login page, login reroutes to a confirmation page that displays good login or failed login\r\n// confirmation page will reroute to login to try again\r\n\r\nclass Links extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { \r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2> Important Links </h2>\r\n                <a href=\"https://docs.google.com/spreadsheets/d/1EUoW6I5brZDEvlex8UPt2Hvn9jTIejhF8LuVJ2JoESA/edit#gid=0\"> Resistance Reduction Cheat Sheet by Reddit's u/DefinitelyNotCeno</a>\r\n                <br/>\r\n                <br/>\r\n                <a href=\"https://www.grimtools.com/checklist/shrines/normal\"> Devotion Shrine Checklist from Grim Tools</a>\r\n                <br/>\r\n                <br/>\r\n                <a href=\"https://www.grimtools.com/calc/\"> Grim Tools Build Calculator</a>\r\n                <br/>\r\n                <br/>\r\n                <a href=\"https://www.grimtools.com/db/\"> Grim Tools Gear Database</a>\r\n                <br/>\r\n                <br/>\r\n                <a href=\"https://grimdawn.gamepedia.com/Grim_Dawn_Wiki\"> Grim Dawn Wiki</a>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport './companion.css';\r\n\r\nimport CompanionV1 from './companionV1';\r\nimport Changes from './changes';\r\nimport Links from './links';\r\n\r\nfunction Nav()\r\n{\r\n\r\nreturn(\r\n  //This first div is the top navigation bar, the second div is the router for pages\r\n  <Router>\r\n    <div className=\"link-buttons\">\r\n      <header className=\"buttons-header\">\r\n        <Link to=\"/CompanionForGrimDawn_v2\">\r\n            <button className=\"const-butt\"> Devotions </button>\r\n        </Link>\r\n        <Link to=\"/CompanionForGrimDawn_v2/links\">\r\n            <button className=\"change-butt\"> Links </button>\r\n        </Link>\r\n        <Link to=\"/CompanionForGrimDawn_v2/changelog\">\r\n            <button className=\"change-butt\"> Change Log </button>\r\n        </Link>\r\n      </header>\r\n    </div>\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/\" exact> <CompanionV1 /> </Route>\r\n        <Route path=\"/CompanionForGrimDawn_v2\" exact> <CompanionV1 /> </Route>\r\n        <Route path=\"/CompanionForGrimDawn_v2/links\"> <Links /> </Route>\r\n        <Route path=\"/CompanionForGrimDawn_v2/changelog\"> <Changes /> </Route>\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\n// style things in this file\r\n//import './App.css';\r\n//import CompanionV1 from './companionV1';\r\nimport Nav from './nav'\r\nimport './companion.css';\r\n\r\n\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ThemeProvider} from \"@chakra-ui/core\";\r\n\r\nReactDOM.render(\r\n    <ThemeProvider>\r\n        <App/>\r\n    </ThemeProvider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}